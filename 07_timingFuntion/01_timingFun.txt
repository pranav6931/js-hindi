All timing functions (like setTimeout, setInterval) are not built into the JavaScript language itself ‚Äî 
they are provided by the JavaScript runtime environment, which is:
- The Browser (like Chrome, Firefox ‚Äî which provide Web APIs like DOM, Timers)
- Node.js (for server-side execution ‚Äî provides its own set of APIs including Timers)

Feature	                              Language Core (JavaScript)	Provided by Runtime
setTimeout	                                     ‚ùå	                       ‚úÖ (Browser/Node.js)
fetch	                                         ‚ùå	                       ‚úÖ (Browser)
console.log	                                     ‚ùå	                       ‚úÖ (Both)
Loops (for, while)	                             ‚úÖ	                       ‚ùå
Functions, closures	                             ‚úÖ	                       ‚ùå
fs (File System)	                             ‚ùå	                       ‚úÖ (Node.js only)

JS is just the language, but things like timers, DOM, file systems, HTTP servers come from the runtime.
If you ever want to test this, you can open a Node.js terminal and try setTimeout() ‚Äî it works there too!


üåê In the Browser (Client-side JavaScript):

   Function	                         Description
setTimeout()	                         Delays a function once
setInterval()	                         Repeats a function after intervals
clearTimeout()	                         Cancels a timeout
clearInterval()	                         Cancels an interval
requestAnimationFrame()	                 Syncs with browser repaint (animations)
cancelAnimationFrame()	                 Cancels animation frame
performance.now()	                     High-res time for performance measuring