NOTE :
üí•look every time whenever I write pseudo code then I directly call that function on console.log. that is fine in case of function 
return something, if not then plz call function directly. else it will give undefined at first 
## check once 21 no pseudo 
üí•First ask your self what you want to achieve, and how we can achieve, dont waste time to try an error in code. clear mind first don't take
pressure think before act.

1) palendrome
2) Prime
3) fibonacci
4) reverse
5) compress (r4t1i2) - input rrrruuutttppp
6) Find unique Ele in array (2 array as input) : 2 ways to solve
        const arr1 = [4,5,6,6,8,9,9,9,2,3]; 
        const arr2 = [4,5,6,6,8,6,6,6,2,5,5,88,88,90,90,60]; 
        console.log(uniqueArr(arr1, arr2));
7) frequencies (output : ['1:2', '3:5', '6:2', '4:2']), 
    console.log(frequencies([1, 1, 1, 5, 8, 8, 8, 9, 9, 0, 0, 6, 5, 4]));
8) Find Duplicates in array                 || console.log(duplicates([3,3,3,4,5,6,6,6,8,8]))
9) Find Largest no. from number array       || console.log(findLargest([4,5,6,8,2,90,4,80]))
   Find Largest no from number string       || console.log(findLargest("5,6,8,2,a90,4,80"));
10) print unique key value pair form 2 objects and sum if duplicate
            const obj1 = { a: 2, b: 5, c: 10 };
            const obj2 = { b: 6, c: 5, e: 10 };
            console.log(uniquePair(obj1, obj2));
11) make flat array  || console.log(flattenArray([2,[3,4,2,[4,6,8],9],[0,3],9,5]));
12) print first non-repeating char || console.log(nonrepeating("eeeerrrtyydfff"))
13) transform even numbers capital of string    ||  console.log(evenToCapital("mynameispranav"))
14) move char to end
15) distinct and duplicate values of array
16) Factorial of number   || console.log(factorial(5))
17) Sorting array || console.log(sorting([5, 3, 8, 0, 1, 2]));
18) transform string to Title case  || console.log(titleCAse('my name is pranav'))
19) Finding anagrams strings || console.log(anagrams(["code", "aaagmnrs", "anagrams", 'doce']))
20) finding the unique deveice names from array of strings (["mixer", "toaster", "mixer", 'mixer','toaster'])
21) 1.	Start counting from 1 to n.
    2.	Print each number after a delay of i * 1000ms (where i is the current number).
22) 3.	Return a Promise that resolves when counting is complete.
23) create individual array
24) if vowels then print
25) sum of digits
26) print the count of vowels in an array and print vowels  // const testStrings = ['i', 'r', 't', 'a', 'b', 'y', 'i', 'm'];
27) Count frequency of items in array Similar to this return the element with highest/second highest frequency
28) string and a substring, count how many times the substring appears in the string.
29) Find indexes of duplicated elements in the array
30) ‚Å†questions around setTimeout and setInterval

